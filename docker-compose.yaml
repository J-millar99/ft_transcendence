services:
  vite:
    container_name: vite
    build: front
    ports:
      - 5173:5173
    develop:
      watch:
        - action: sync
          path: front
          target: /usr/src/app
    networks:
      - transcendence
  
  django:
    container_name: django
    build: back
    ports:
      - 8000:8000
    develop:
      watch:
        - action: sync
          path: back
          target: /usr/src/app
    depends_on:
      - postgres
      - redis
    volumes:
      - static-data:/vol/static
      - media-data:/vol/media
    networks:
      - transcendence
  
  postgres:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - 5433:5432
    networks:
      - transcendence
    restart: on-failure

  redis:
    container_name: redis
    image: redis
    ports:
      - 6379:6379
    networks:
      - transcendence
  
  nginx:
    container_name: nginx
    volumes:
      - static-data:/vol/static
      - media-data:/vol/media
      # 보안 개발의 편의성을 위해 추가 (이후 삭제)
      - ./nginx/conf/modsec.conf:/etc/nginx/modsec/modsec.conf
      - ./nginx/conf/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/conf/proxy_params:/etc/nginx/proxy_params
      - ./nginx/conf/nginx.conf:/etc/nginx/nginx.conf
    build: ./nginx
    ports:
      - 443:443
    depends_on:
      - vite
    networks:
      - transcendence
  
  vault:
    container_name: vault
    build: ./vault
    cap_add:
      - IPC_LOCK
    environment:
      VAULT_ADDR: http://127.0.0.1:8200
    volumes:
      - ./volumes/vault:/vault-data
    ports:
      - "8200:8200"
    networks:
      - transcendence

volumes:
  static-data:
  media-data:
  postgres-data:

networks:
  transcendence:
    driver: bridge
